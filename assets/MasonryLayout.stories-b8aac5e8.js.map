{"version":3,"file":"MasonryLayout.stories-b8aac5e8.js","sources":["../../src/lib/MasonryLayout/style.ts","../../src/lib/MasonryLayout/MasonryLayoutItem/style.ts","../../src/lib/MasonryLayout/MasonryLayoutItem/index.tsx","../../src/lib/MasonryLayout/index.tsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { CommonStyleProps, CommonTag } from '../style/common';\nimport { _MasonryLayoutProps } from '.';\n\ntype ComponentProps = _MasonryLayoutProps & CommonStyleProps;\n\nconst getGridTemplate = (size: string) => {\n  return `repeat(auto-fill, minmax(${size}, 1fr))`;\n};\n\nexport const Component = styled(CommonTag)<ComponentProps>`\n  display: grid;\n  grid-template-columns: ${({ itemSize = '1fr' }) => getGridTemplate(itemSize)};\n\n  grid-auto-rows: 1px;\n  grid-column-gap: ${({ gap, columnGap = '0' }) => (gap ? gap : columnGap)};\n`;\n","import styled from 'styled-components';\n\ninterface ComponentProps {\n  gap?: string;\n  rowGap?: string;\n  height: number;\n}\n\nexport const Component = styled.div<ComponentProps>`\n  padding-bottom: ${({ gap, rowGap = '0' }) => (gap ? gap : rowGap)};\n  grid-row-end: ${({ height }) => `span ${height}`};\n  height: max-content;\n`;\n","import { PropsWithChildren, useEffect, useRef, useState } from 'react';\nimport * as S from './style';\n\ninterface MasonryLayoutItemProps extends PropsWithChildren {\n  rowGap?: string;\n  gap?: string;\n}\n\nexport default function MasonryLayoutItem({\n  gap,\n  rowGap,\n  children,\n}: MasonryLayoutItemProps) {\n  const itemRef = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState(1);\n\n  useEffect(() => {\n    if (!itemRef.current) return;\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      const [entry] = entries;\n      const { height } = entry.target.getBoundingClientRect();\n\n      setHeight(Math.round(height));\n    });\n\n    resizeObserver.observe(itemRef.current);\n\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  return (\n    <S.Component height={height} rowGap={rowGap} gap={gap} ref={itemRef}>\n      {children}\n    </S.Component>\n  );\n}\n","import { ElementType, ReactElement, createElement, forwardRef } from 'react';\nimport { PolymorphicComponentProps, PolymorphicRef } from '../types/common';\nimport * as S from './style';\nimport MasonryLayoutItem from './MasonryLayoutItem';\n\nexport interface _MasonryLayoutProps {\n  itemSize: string;\n  gap?: string;\n  rowGap?: string;\n  columnGap?: string;\n}\n\nexport type MasonryLayoutProps<T extends ElementType> =\n  PolymorphicComponentProps<T, _MasonryLayoutProps>;\n\ntype MasonryLayoutComponent = <T extends ElementType>(\n  props: MasonryLayoutProps<T>\n) => ReactElement | null;\n\nconst MasonryLayout: MasonryLayoutComponent = forwardRef(function MasonryLayout<\n  T extends ElementType = 'div'\n>(\n  { css, as, children, ...rest }: MasonryLayoutProps<T>,\n  ref: PolymorphicRef<T>\n) {\n  const childArray = Array.isArray(children) ? children : [children];\n\n  return (\n    <S.Component as={as} ref={ref} style={css} {...rest}>\n      {childArray.map((child) => (\n        <MasonryLayoutItem rowGap={rest.rowGap} gap={rest.gap}>\n          {createElement(child.type, {\n            ...{\n              ...child.props,\n            },\n          })}\n        </MasonryLayoutItem>\n      ))}\n    </S.Component>\n  );\n});\n\nexport default MasonryLayout;\n"],"names":["getGridTemplate","size","Component","styled","CommonTag","itemSize","gap","columnGap","rowGap","height","MasonryLayoutItem","children","itemRef","useRef","setHeight","useState","useEffect","resizeObserver","entries","entry","height2","jsx","S.Component","MasonryLayout","forwardRef","css","as","rest","ref","childArray","child","createElement"],"mappings":"wKAMA,MAAMA,EAAmBC,GAChB,4BAA4BA,CAAI,UAG5BC,EAAYC,EAAOC,CAAS;AAAA;AAAA,2BAEd,CAAC,CAAE,SAAAC,EAAW,KAAY,IAAAL,EAAgBK,CAAQ,CAAC;AAAA;AAAA;AAAA,qBAGzD,CAAC,CAAE,IAAAC,EAAK,UAAAC,EAAY,OAAWD,GAAYC,CAAU;AAAA,ECP7DL,EAAYC,EAAO;AAAA,oBACZ,CAAC,CAAE,IAAAG,EAAK,OAAAE,EAAS,OAAWF,GAAYE,CAAO;AAAA,kBACjD,CAAC,CAAE,OAAAC,CAAa,IAAA,QAAQA,CAAM,EAAE;AAAA;AAAA,ECFlD,SAAAC,EAAA,CAA0C,IAAAJ,EACxC,OAAAE,EACA,SAAAG,CAEF,EAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EACA,CAAAJ,EAAAK,CAAA,EAAAC,EAAA,SAAA,CAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAJ,EAAA,QAAsB,OAEtB,MAAAK,EAAA,IAAA,eAAAC,GAAA,CACE,KAAA,CAAAC,CAAA,EAAAD,EACA,CAAA,OAAAE,CAAA,EAAAD,EAAA,OAAA,wBAEAL,EAAA,KAAA,MAAAM,CAAA,CAAA,CAA4B,CAAA,EAG9B,OAAAH,EAAA,QAAAL,EAAA,OAAA,EAEA,IAAAK,EAAA,YAAuC,EAAA,CAAA,CAAA,EAGzCI,EAAA,IAAAC,EAAA,CAAA,OAAAb,EAAA,OAAAD,EAAA,IAAAF,EAAA,IAAAM,EAAA,SAAAD,CAAA,CAAA,CAKF,kSCjBA,MAAMY,EAAwCC,EAAAA,WAAW,SAGvD,CAAE,IAAAC,EAAK,GAAAC,EAAI,SAAAf,EAAU,GAAGgB,CAAK,EAC7BC,EACA,CACA,MAAMC,EAAa,MAAM,QAAQlB,CAAQ,EAAIA,EAAW,CAACA,CAAQ,EAG/D,OAAAU,MAACC,EAAA,CAAY,GAAAI,EAAQ,IAAAE,EAAU,MAAOH,EAAM,GAAGE,EAC5C,SAAWE,EAAA,IAAKC,GACfT,EAAA,IAACX,EAAkB,CAAA,OAAQiB,EAAK,OAAQ,IAAKA,EAAK,IAC/C,SAAcI,gBAAAD,EAAM,KAAM,CAEvB,GAAGA,EAAM,KACX,CACD,CACH,CAAA,CACD,CACH,CAAA,CAEJ,CAAC;;;;;;;;;;;;;;;"}